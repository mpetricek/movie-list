{"version":3,"sources":["components/Header.tsx","components/Item.tsx","App.tsx"],"names":["Header","setGrid","grid","View","style","styles","header","Text","title","switches","TouchableOpacity","styleSwitch","marginRight","styleSwitchActive","onPress","styleSwitchText","styleSwitchTextActive","StyleSheet","create","flexFlow","borderBottomWidth","borderColor","marginVertical","paddingBottom","justifyContent","alignItems","color","borderWidth","borderRadius","paddingVertical","paddingHorizontal","backgroundColor","fontWeight","fontSize","Item","item","gridItem","Image","image","source","uri","poster","itemText","itemTitle","episodeNumber","episode_number","numberOfLines","description","flex","marginHorizontal","padding","marginBottom","height","width","lineHeight","display","flexBasis","borderTopLeftRadius","borderBottomLeftRadius","App","useState","movies","setMovies","sortRefresh","setSortRefresh","useWindowDimensions","useEffect","a","async","fetch","response","json","console","log","fetchData","container","FlatList","key","data","extraData","renderItem","index","numColumns","sortButton","sort","b","maxWidth","alignSelf","flexShrink","flexGrow","textAlign"],"mappings":"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","file":"static/js/app.5c68f818.chunk.js","sourcesContent":["import React from 'react'\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native'\nexport type Props = {\n    setGrid: (value: boolean) => void\n    grid: boolean\n}\nexport default function Header({ setGrid, grid }: Props) {\n    return (\n        <View style={styles.header}>\n            <Text style={styles.title}>Movies list</Text>\n            <View style={styles.switches}>\n                <TouchableOpacity\n                    style={[styles.styleSwitch, { marginRight: 5 }, !grid && styles.styleSwitchActive]}\n                    onPress={() => setGrid(false)}\n                >\n                    <Text style={[styles.styleSwitchText, !grid && styles.styleSwitchTextActive]}>List</Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                    style={[styles.styleSwitch, grid && styles.styleSwitchActive]}\n                    onPress={() => setGrid(true)}\n                >\n                    <Text style={[styles.styleSwitchText, grid && styles.styleSwitchTextActive]}>Grid</Text>\n                </TouchableOpacity>\n            </View>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    header: {\n        flexFlow: 'row',\n        borderBottomWidth: 2,\n        borderColor: '#eeeeee',\n        marginVertical: 10,\n        paddingBottom: 10,\n        justifyContent: 'space-between',\n        alignItems: 'center',\n    },\n    switches: {\n        flexFlow: 'row',\n        alignItems: 'center',\n    },\n    styleSwitch: {\n        borderColor: 'grey',\n        color: 'grey',\n        borderWidth: 1,\n        borderRadius: 50,\n        paddingVertical: 5,\n        paddingHorizontal: 20,\n    },\n    styleSwitchActive: {\n        backgroundColor: 'grey',\n    },\n    styleSwitchText: {\n        color: 'grey',\n        fontWeight: '700',\n    },\n    styleSwitchTextActive: {\n        color: 'white',\n    },\n    title: {\n        fontSize: 25,\n        fontWeight: '700',\n    },\n})\n","import React from 'react'\nimport { StyleSheet, Text, View, Image } from 'react-native'\nexport type Props = {\n    item: {\n        title: string\n        episode_number: string\n        description: string\n        poster: string\n    }\n    grid: boolean\n}\nexport default function Item({ item, grid }: Props) {\n    return (\n        <View style={[styles.item, grid && styles.gridItem]}>\n            <Image\n                style={styles.image}\n                source={{\n                    uri: `https://raw.githubusercontent.com/RyanHemrick/star_wars_movie_app/master/public/images/${item.poster}`,\n                }}\n            />\n            <View style={styles.itemText}>\n                <Text style={styles.itemTitle}>{item.title}</Text>\n                <Text style={styles.episodeNumber}>Episode {item.episode_number}</Text>\n                <Text numberOfLines={2}>{item.description}</Text>\n            </View>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    item: {\n        backgroundColor: '#efefef',\n        borderRadius: 10,\n        marginVertical: 8,\n        flexFlow: 'row',\n        flex: 1,\n    },\n    gridItem: {\n        marginHorizontal: 8,\n    },\n    itemText: {\n        flex: 1,\n        padding: 20,\n    },\n    itemTitle: {\n        fontSize: 18,\n        fontWeight: '700',\n        marginBottom: 10,\n    },\n    episodeNumber: {\n        backgroundColor: '#a6ebe2',\n        borderRadius: 25,\n        height: 25,\n        width: 100,\n        fontWeight: '700',\n        justifyContent: 'center',\n        lineHeight: 0,\n        fontSize: 12,\n        color: '#22a595',\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: 10,\n    },\n    image: {\n        flexBasis: '6rem',\n        height: '100%',\n\n        borderTopLeftRadius: 10,\n        borderBottomLeftRadius: 10,\n    },\n})\n","import React, { useEffect } from 'react'\nimport { useState } from 'react'\nimport { StyleSheet, Text, View, FlatList, TouchableOpacity, useWindowDimensions } from 'react-native'\nimport Header from './components/Header'\nimport Item from './components/Item'\nexport type Props = {\n    item: {\n        title: string\n        episode_number: string\n        description: string\n        poster: string\n    }\n}\nexport default function App() {\n    const [movies, setMovies] = useState<[]>([])\n    const [sortRefresh, setSortRefresh] = useState(false)\n    const [grid, setGrid] = useState(false)\n    const { width } = useWindowDimensions()\n    useEffect(() => {\n        const url = 'https://raw.githubusercontent.com/RyanHemrick/star_wars_movie_app/master/movies.json'\n\n        const fetchData = async () => {\n            try {\n                const response = await fetch(url)\n                const json = await response.json()\n                json && setMovies(json.movies)\n            } catch (error) {\n                console.log('error', error)\n            }\n        }\n\n        fetchData()\n    }, [])\n\n    const onSortPress = () => {\n        setMovies(\n            movies.sort((a: { episode_number: string }, b: { episode_number: string }) => {\n                return a.episode_number ? -1 : b.episode_number ? 1 : 0\n            })\n        )\n        setSortRefresh(!sortRefresh)\n    }\n\n    return (\n        <View style={styles.container}>\n            <Header setGrid={setGrid} grid={grid} />\n            <FlatList\n                key={`${grid}-${width}`}\n                data={movies}\n                extraData={sortRefresh}\n                renderItem={({ item, index }) => <Item key={index} grid={grid} item={item} />}\n                numColumns={grid && width >= 768 ? 2 : 1}\n                style={grid && { marginHorizontal: -8 }}\n            />\n            <TouchableOpacity style={styles.sortButton} onPress={onSortPress}>\n                <Text style={{ color: 'white', fontWeight: '700' }}>Sort list</Text>\n            </TouchableOpacity>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        maxWidth: 800,\n        alignSelf: 'center',\n        flexShrink: 0,\n        flexGrow: 1,\n        marginHorizontal: 16,\n    },\n\n    sortButton: {\n        borderRadius: 25,\n        backgroundColor: '#00b3a3',\n        marginVertical: 10,\n        width: 200,\n        paddingVertical: 10,\n        textAlign: 'center',\n        alignSelf: 'center',\n    },\n})\n"],"sourceRoot":""}